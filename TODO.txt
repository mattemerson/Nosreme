https://maven.apache.org/
https://en.wikipedia.org/wiki/List_of_software_package_management_systems
https://gradle.org/install/
https://spring.io/guides/gs/gradle/
https://akka.io/
https://developer.lightbend.com/start/?group=akka&project=akka-quickstart-java
https://stackoverflow.com/questions/9577012/whats-the-equivalent-of-pythons-celery-project-for-java
https://hazelcast.com/resources/whitepaper-redis-comparison/
https://stackoverflow.com/questions/10137857/is-redis-just-a-cache
https://spring.io/guides/gs/reactive-rest-service/
http://www.baeldung.com/persistence-with-spring-series/

You can create a Properties file.

Downloaded a project to upload files...it worked!

Created basic scheduler and a basic batch upload

This goes through the application-properties?
https://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html

spring.datasource.platform

Downloaded spring sts support

Go into the project directory and do this....
gradlew bootRun

Gradle added gradle home and to path
Java added Java home and to path

Downloaded 7zip (evidently this is in the path?)
Look at Spring Profiles

cURL installed onto the path

Install Git for Windows
http://gitforwindows.org/
Git is installed.  Need to go through a tutorial.

My Personal Work Email
nosreme.j.wettham@gmail.com
200ten##

My Personal Amazon Account (the free plan); Samarkand is the plan
nosreme.j.wettham@gmail.com
200ten##

Spring REST Tutorial to Read
https://spring.io/guides/tutorials/bookmarks/
https://spring.io/guides/gs/rest-service/ (this one has links to a ton of other tutorials)

Spring with OAuth
https://spring.io/guides/tutorials/spring-boot-oauth2/
zookeeper

Things to do
-Command Notes/Scripts
-Suggested environmental set-up

Eclipse
-Upgrade to Oxygen (DONE)
-Gradle Plug-in (DONE)

Gradle (done!)
-Download gradle
-Tutorial
-Gradle Wrapper! (it just kind of does this)

Github
-Refresh command file
-Build-up comparison notes
-CI/CD
-Command Line Tool

Neo4j

Akka
-Download
-Integrated with Spring
-Akka Persistence

Spring REST
-Got this working.  Look at this page for other examples

Databases
-MySQL
-In-Memory DB; http://www.baeldung.com/java-in-memory-databases
https://en.wikipedia.org/wiki/List_of_in-memory_databases
https://spring.io/guides/gs/relational-data-access/; this used an H2 database; also pointed to ther tutorials?  QUESTION: how would I used a HyperSQLDB?

-Looked at Uploading files


-NoSQL DB (Mongo, Cassandra)

Caching
-Radis
-Memcache
-Elasticache

-Artifactory

Try Celery (this is Python only)

-Use a Proper Structure
